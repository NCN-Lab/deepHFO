# -*- coding: utf-8 -*-
"""read edf.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_sGY91uj9f42W6h9x20-3aBLGGLZcCd_
"""

import mne
import numpy as np
from scipy.io import loadmat
import time

def read_edf_file(file, update_progress_method, bipolar = False):
    data = mne.io.read_raw_edf(file,preload=True)
    raw_data = data.get_data()
    info = data.info
    sr=info.get('sfreq')
    channels = data.ch_names

    if bipolar:
      bipolar_channels = channels
      bipolar_data = raw_data
      update_progress_method(100)
    else:

      bipolar_data=[]
      bipolar_channels=[]

      for c in range(len(channels)-1):
        ignore=False
      
        ch1=channels[c]
        p=-1
        while ch1[p].isdigit():
          p=p-1
        if p<-1:
          id1=ch1[:p+1]
          n1 =ch1[p+1:]
        else:
          ignore=True
      
        ch2=channels[c+1]
        p=-1
        while ch2[p].isdigit():
          p=p-1
      
        if p<-1:
          id2=ch2[:p+1]
          n2 =ch2[p+1:]
        else:
          ignore=True
      
        if ignore==False:
          if id1==id2 and int(n1)+1==int(n2):
            if id1!='DC' and id1!='C':
              bipolar_data.append(raw_data[c,:]-raw_data[c+1,:])
              bipolar_channels.append(channels[c]+'-'+channels[c+1])

        percentage=c/len(channels)*100
        update_progress_method(percentage)
      
      bipolar_data=np.array(bipolar_data)

    return bipolar_data, bipolar_channels, sr
